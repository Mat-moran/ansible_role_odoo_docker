version: "2.1"
services:
    odoo:
        image: filament/odoo
        container_name: odoo
        depends_on:
            - db
            - smtp
        environment:
            PGDATABASE: "{{ odoo_db }}"
        tty: true
        volumes:
            - filestore:/opt/odoo/data:z
{% if banking is defined %}
            - ./bank/:/ofx/:ro
{% endif %}
        networks:
            default:
            inverseproxy_shared:
            whitelists_proxy:
{% if mailname is defined %}
            email_proxy:
{% endif %}
        restart: unless-stopped
        labels:
            traefik.docker.network: "inverseproxy_shared"
            traefik.enable: "true"
            traefik.http.routers.odoo-unsec.entrypoints: "http"
            traefik.http.routers.odoo-unsec.middlewares: "https-redirect@file"
            traefik.http.routers.odoo-unsec.rule: "Host(`{{ odoo_url }}{% if odoo_url2 is defined %},{{ odoo_url2 }}{% endif %}`)"
            traefik.http.routers.odoo-unsec.service: "odoo"
{% if ansible_processor_vcpus > 2 %}
            traefik.http.routers.odoo-longpolling.entrypoints: "https"
            traefik.http.routers.odoo-longpolling.middlewares: "security-headers@file"
            traefik.http.routers.odoo-longpolling.rule: "Host(`{{ odoo_url }}{% if odoo_url2 is defined %},{{ odoo_url2 }}{% endif %}`) && PathPrefix(`/longpolling/`)"
            traefik.http.routers.odoo-longpolling.service: "odoo-longpolling"
            traefik.http.routers.odoo-longpolling.tls: "true"
            traefik.http.routers.odoo-longpolling.tls.certresolver: "le"
            traefik.http.routers.odoo-longpolling.tls.options: "default@file"
            traefik.http.services.odoo-longpolling.loadbalancer.server.port: "8072"
{% endif %}
            traefik.http.routers.odoo-restrict.entrypoints: "https"
            traefik.http.routers.odoo-restrict.middlewares: "security-headers@file, auth@file"
            traefik.http.routers.odoo-restrict.rule: "Host(`{{ odoo_url }}{% if odoo_url2 is defined %},{{ odoo_url2 }}{% endif %}`) && (PathPrefix(`/web/database/`) || Path(`/website/info`))"
            traefik.http.routers.odoo-restrict.service: "odoo"
            traefik.http.routers.odoo-restrict.tls: "true"
            traefik.http.routers.odoo-restrict.tls.certresolver: "le"
            traefik.http.routers.odoo-restrict.tls.options: "default@file"
            traefik.http.routers.odoo.entrypoints: "https"
            traefik.http.routers.odoo.middlewares: "security-headers@file"
            traefik.http.routers.odoo.rule: "Host(`{{ odoo_url }}{% if odoo_url2 is defined %},{{ odoo_url2 }}{% endif %}`)"
            traefik.http.routers.odoo.service: "odoo"
            traefik.http.routers.odoo.tls: "true"
            traefik.http.routers.odoo.tls.certresolver: "le"
            traefik.http.routers.odoo.tls.options: "default@file"
            traefik.http.services.odoo.loadbalancer.server.port: "8069"

    db:
        image: postgres:{{ odoo_db_version }}-alpine
        container_name: odoo_db
        environment:
            POSTGRES_USER: "{{ odoo_db_user }}"
            POSTGRES_PASSWORD: "{{ odoo_db_pass }}"
        volumes:
            - db:/var/lib/postgresql/data:z
        restart: unless-stopped

    smtp:
{% if mailname is defined %}
        image: tecnativa/postfix-relay
        container_name: odoo_smtp
        networks:
            email_proxy:
        volumes:
            - smtp:/var/spool/postfix
        environment:
            MAILNAME: "{{ mailname }}"
            MAIL_RELAY_HOST: "{{ mailserver }}"
            MAIL_RELAY_PORT: "{{ smtpport }}"
            MAIL_RELAY_USER: "{{ smtpuser }}"
            MAIL_RELAY_PASS: "{{ smtppass }}"
            MAIL_CANONICAL_DOMAINS: "{{ mailname }}"
            MAIL_NON_CANONICAL_DEFAULT: "{{ mailname }}"
        restart: unless-stopped

    email:
        image: tecnativa/whitelist
        container_name: odoo_email
        networks:
            email_proxy:
                aliases:
                    - "{{ mailserver }}"
            email_public:
        ports:
            - "{{ smtpport }}:{{ smtpport }}"
            - "993:993"
        environment:
            PORT: "443 {{ smtpport }} 993"
            TARGET: "{{ mailserver }}"
            PRE_RESOLVE: 1
{% else %}
        image: mailhog/mailhog
        container_name: odoo_smtp
{% endif %}
        restart: unless-stopped

networks:
    default:
        internal: true
        driver_opts:
            encrypted: 1
    inverseproxy_shared:
        external: true
    whitelists_proxy:
        external: true
{% if mailname is defined %}
    email_proxy:
        internal: true
        driver_opts:
            encrypted: 1
    email_public:
        driver_opts:
            encrypted: 1
{% endif %}

volumes:
    filestore:
    db:
{% if mailname is defined %}
    smtp:
{% endif %}
