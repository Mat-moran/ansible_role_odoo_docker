version: "2.1"
services:
    odoo:
        build:
            context: ./odoo
        image: filament/odoo:{{ odoo_image_tag | default(odoo_version) }}
        container_name: testodoo
        depends_on:
            - db
            - smtp
        environment:
            PGDATABASE: "{{ odoo_db_test }}"
        tty: true
        volumes:
            - filestore:/opt/odoo/data:z
        networks:
            default:
            inverseproxy_shared:
            whitelists_proxy:
        restart: unless-stopped
        labels:
            traefik.enable: "true"
{% if ansible_processor_vcpus > 2 %}
            traefik.http.routers.odootest-longpolling.rule: "Host(`{{ odoo_test_url }}`) && PathPrefix(`/longpolling/`)"
            traefik.http.routers.odootest-longpolling.service: "odootest-longpolling"
            traefik.http.services.odootest-longpolling.loadbalancer.server.port: "8072"
{% endif %}
            traefik.http.routers.odootest-restrict.middlewares: "auth@file"
            traefik.http.routers.odootest-restrict.rule: "Host(`{{ odoo_test_url }}`) && (PathPrefix(`/web/database/`) || Path(`/website/info`))"
            traefik.http.routers.odootest-restrict.service: "odootest"
            traefik.http.routers.odootest.middlewares: "norobot-headers@file"
            traefik.http.routers.odootest.rule: "Host(`{{ odoo_test_url }}`)"
            traefik.http.routers.odootest.service: "odootest"
            traefik.http.services.odootest.loadbalancer.server.port: "8069"
        command:
            - odoo
            - --smtp-port=1025
            - --database={{ odoo_db_test }}
{% if ansible_processor_vcpus > 2 %}
            - --workers=2
            - --max-cron-threads=1
{% endif %}

    db:
        image: postgres:{{ odoo_db_version }}-alpine
        container_name: testodoo_db
        environment:
            POSTGRES_USER: "{{ odoo_db_user }}"
            POSTGRES_PASSWORD: "{{ odoo_db_pass }}"
        volumes:
            - db:/var/lib/postgresql/data:z
        restart: unless-stopped

    smtp:
        image: mailhog/mailhog
        container_name: testodoo_smtp
        restart: unless-stopped
        networks:
            default:
            inverseproxy_smtp:
        labels:
            traefik.docker.network: "inverseproxy_smtp"
            traefik.enable: "true"
            traefik.http.routers.odootestsmtp.middlewares: "auth@file, smtp-stripprefix@file"
            traefik.http.routers.odootestsmtp.rule: "Host(`{{ odoo_test_url }}`) && PathPrefix(`/smtp/`)"
            traefik.http.routers.odootestsmtp.service: "odootestsmtp"
            traefik.http.services.odootestsmtp.loadbalancer.server.port: "8025"

networks:
    default:
        internal: true
        driver_opts:
            encrypted: 1
    inverseproxy_shared:
        external: true
    inverseproxy_smtp:
        external: true
    whitelists_proxy:
        external: true

volumes:
    filestore:
    db:
