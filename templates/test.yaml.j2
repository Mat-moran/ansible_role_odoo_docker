version: "2.1"
services:
    odoo:
        build:
            context: ./odoo
        image: filament/odoo
        container_name: testodoo
        depends_on:
            - db
            - smtp
        environment:
            PGDATABASE: "{{ odoo_db_test }}"
        tty: true
        volumes:
            - filestore:/opt/odoo/data:z
        networks:
            default:
            inverseproxy_shared:
            whitelists_proxy:
        restart: unless-stopped
        labels:
            traefik.docker.network: "inverseproxy_shared"
            traefik.enable: "true"
            traefik.frontend.headers.STSSeconds: "15552000"
            traefik.frontend.headers.STSIncludeSubdomains: "true"
            traefik.frontend.headers.STSPreload: "true"
            traefik.frontend.passHostHeader: "true"
            traefik.port: "8069"
{% if ansible_processor_vcpus > 2 %}
            traefik.longpolling.port: "8072"
            traefik.longpolling.frontend.rule:
                "Host:{{ odoo_test_url }};PathPrefix:/longpolling/"
{% endif %}
            traefik.frontend.headers.customResponseHeaders:
                "X-Robots-Tag:noindex, nofollow"
            traefik.dbmanager.frontend.auth.basic.users:
                "{{ odoo_db_user }}:{{ srv_proxy_pass | password_hash('apr_md5_crypt', 65534 | random(seed=inventory_hostname) | string) | regex_replace('\\$','$$') }}"
            traefik.dbmanager.frontend.rule:
                "Host:{{ odoo_test_url }};PathPrefix:/web/database/"
            traefik.dbselector.frontend.rule:
                "Host:{{ odoo_test_url }};PathPrefix:/web/database/{p:selector|list}"
            traefik.websiteinfo.frontend.auth.basic.users:
                "{{ odoo_db_user }}:{{ srv_proxy_pass | password_hash('apr_md5_crypt', 65534 | random(seed=inventory_hostname) | string) | regex_replace('\\$','$$') }}"
            traefik.websiteinfo.frontend.rule:
                "Host:{{ odoo_test_url }};Path:/website/info"
            traefik.www.frontend.rule: "Host:{{ odoo_test_url }}"
        command:
            - odoo
            - --smtp-port=1025
            - --database={{ odoo_db_test }}
{% if ansible_processor_vcpus > 2 %}
            - --workers=1
            - --max-cron-threads=1
{% endif %}

    db:
        image: postgres:{{ odoo_db_version }}-alpine
        container_name: testodoo_db
        environment:
            POSTGRES_USER: "{{ odoo_db_user }}"
            POSTGRES_PASSWORD: "{{ odoo_db_pass }}"
        volumes:
            - db:/var/lib/postgresql/data:z
        restart: unless-stopped

    smtp:
        image: mailhog/mailhog
        container_name: testodoo_smtp
        restart: unless-stopped
        networks:
            default:
            inverseproxy_smtp:
        labels:
            traefik.docker.network: "inverseproxy_smtp"
            traefik.enable: "true"
            traefik.frontend.passHostHeader: "true"
            traefik.port: "8025"
            traefik.frontend.rule: "Host:{{ odoo_test_url }};PathPrefixStrip:/smtp/"
            traefik.frontend.auth.basic.users:
                "{{ odoo_db_user }}:{{ odoo_db_pass | password_hash('apr_md5_crypt', 65534 | random(seed=inventory_hostname) | string) | regex_replace('\\$','$$') }}"

networks:
    default:
        internal: true
        driver_opts:
            encrypted: 1
    inverseproxy_shared:
        external: true
    inverseproxy_smtp:
        external: true
    whitelists_proxy:
        external: true

volumes:
    filestore:
    db:
