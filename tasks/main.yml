---
#--------------------------------------------------
# Whitelists section
#--------------------------------------------------

- name: copy docker compose for whitelists
  template:
    src: whitelists.yaml.j2
    dest: "/home/docker/whitelists.yaml"
    owner: root
    group: root
    mode: 0400
  notify: start odoo docker whitelists
  when: inventory_hostname in groups['docker_secure']
  tags: odoo_whitelists

#--------------------------------------------------
# Test Docker section
#--------------------------------------------------
- name: TEST create Odoo docker structure on server in /home/docker/odootest
  file:
    name: /home/docker/odootest/odoo/private
    state: directory
    owner: root
    group: root
  tags: odoo_test

- name: TEST copy Dockerfile to retrieve private repos and extra OCA ones
  template:
    src: Dockerfile.j2
    dest: "/home/docker/odootest/odoo/Dockerfile"
    owner: root
    group: root
    mode: 0644 
  notify: build odoo docker test
  tags: odoo_test

- name: TEST copy update scripts to be run during build
  template:
    src: "{{ item }}"
    dest: "/home/docker/odootest/odoo/private/"
    owner: root
    group: root
    mode: 0750
  with_items:
    - fetch_repos
    - fetch_repos_addons
  notify: build odoo docker test
  tags: odoo_test

- name: TEST set {{ item }} variables from template
  template:
    src: "{{ item }}.j2"
    dest: "/home/docker/odootest/odoo/private/{{ item }}"
    owner: root
    group: root
    mode: 0644 
  with_items:
    - repos.yaml
    - repos-addons.yaml
  notify: build odoo docker test
  tags: odoo_test

- name: TEST copy odoo.conf file
  template:
    src: odoo.conf.j2
    dest: "/home/docker/odootest/odoo/odoo.conf"
    owner: root
    group: root
    mode: 0644
  notify: build odoo docker test
  tags: odoo_test

- name: TEST copy private ssh keys file
  copy:
    content: "{{ git_private_keys }}"
    dest: "/home/docker/odootest/odoo/id_rsa"
    owner: root
    group: root
    mode: 0600
  notify: build odoo docker test
  when: git_private_keys is defined
  tags: odoo_test

- name: TEST copy test docker compose service
  template:
    src: test.yaml.j2
    dest: /home/docker/odootest/docker-compose.yml
    owner: root
    group: root
    mode: 0400
  notify: start odoo docker test
  tags: odoo_test
  
#--------------------------------------------------
# Prod Docker section
#--------------------------------------------------
- name: PROD create Odoo docker structure on server in /home/docker/odoo
  file:
    name: "/home/docker/odoo"
    state: directory
    owner: root
    group: root
  tags: odoo_prod

- name: PROD copy prod docker compose service
  template:
    src: prod.yaml.j2
    dest: /home/docker/odoo/docker-compose.yml
    owner: root
    group: root
    mode: 0400
  notify: start odoo docker prod
  tags: odoo_prod

#--------------------------------------------------
# Banking section
#--------------------------------------------------

- name: Clone Weboob GIT repo
  git: repo="https://git.weboob.org/weboob/devel.git" dest="/root/weboob"
  when: banking is defined
  register: weboob
  tags: odoo_prod, bank

- name: Install necessary python modules
  pip:
    name: ['prettytable', 'cssselect', 'html2text', 'unidecode', 'python-dateutil', 'lxml', 'Pillow']
  when: banking is defined
  tags: odoo_prod, bank

- name: Create Config directory
  file:
    name: /root/.config/weboob
    state: directory
  when: banking is defined
  tags: odoo_prod, bank

- name: Copy configuration file
  template: src=backends.j2 dest=/root/.config/weboob/backends mode=0400
  when: banking is defined
  tags: odoo_prod, bank

- name: PROD create bank repo
  file:
    name: /home/docker/odoo/bank
    state: directory
    owner: root
    group: root
  when: banking is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank account every day
  cron:
    name: import bank moves
    minute: 30
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank_account }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank_account_import.ofx ; chmod 444 /home/docker/odoo/bank/bank_account_import.ofx
  when: banking is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank account 2 every day
  cron:
    name: import bank moves account 2
    minute: 50
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank_account2 }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank_account2_import.ofx ; chmod 444 /home/docker/odoo/bank/bank_account2_import.ofx
  when: banking is defined and bank_account2 is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank account 3 every day
  cron:
    name: import bank moves account 3
    minute: 10
    hour: 21
    job: /root/weboob/tools/local_run.sh boobank history {{ bank_account3 }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank_account3_import.ofx ; chmod 444 /home/docker/odoo/bank/bank_account3_import.ofx
  when: banking is defined and bank_account3 is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank 2 account every day
  cron:
    name: import bank 2 moves
    minute: 25
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank2_account }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank2_account_import.ofx ; chmod 444 /home/docker/odoo/bank/bank2_account_import.ofx
  when: banking is defined and bank2_account is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank 2 account 2 every day
  cron:
    name: import bank 2 moves account 2
    minute: 45
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank2_account2 }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank2_account2_import.ofx ; chmod 444 /home/docker/odoo/bank/bank2_account2_import.ofx
  when: banking is defined and bank2_account2 is defined
  tags: odoo_prod, bank

#--------------------------------------------------
# Backup section
#--------------------------------------------------

- name: Create SSH key directory for SFTP backups
  file:
    name: /home/docker/backups/.ssh
    state: directory
    owner: root
    group: root
  when: inventory_hostname in groups.maintenance_sftp

- name: Copy private key for SFTP backups
  copy:
    src: /home/{{ host_user }}/.ssh/id_rsa
    remote_src: yes
    dest: /home/docker/backups/.ssh/id_rsa
    owner: root
    group: root
    mode: 0600
  when: inventory_hostname in groups.maintenance_sftp

- name: PROD copy docker compose for backups
  template:
    src: backup.yaml.j2
    dest: "/home/docker/backups/backup-odoo.yaml"
    owner: root
    group: root
    mode: 0400
  when: inventory_hostname in groups.maintenance_contract
  tags: odoo_prod

- name: PROD create .ssh directory
  file:
    name: /home/docker/backups/.ssh
    state: directory
    owner: root
    group: root
    mode: 0700
  when: inventory_hostname in groups.maintenance_sftp
  tags: odoo_prod

- name: PROD copy RSA key for SFTP user
  copy:
    src: /home/{{ host_user }}/.ssh/id_rsa
    remote_src: yes
    dest: /home/docker/backups/.ssh/id_rsa
    owner: root
    group: root
    mode: 0600
  when: inventory_hostname in groups.maintenance_sftp
  tags: odoo_prod

- name: PROD add cron job to run backup every day - step 1 mount NFS
  cron:
    name: mount nfs for backup odoo
    minute: 58
    hour: 1
    job: mount /home/docker/backups/odoo
  when: inventory_hostname in groups.maintenance_nfs
  tags: odoo_prod

- name: PROD add cron job to run backup every day - step 2 backup and unmount NFS
  cron:
    name: backup odoo
    minute: 8
    hour: 2
    job: /usr/local/bin/docker-compose -f /home/docker/backups/backup-odoo.yaml run --rm backup_odoo && umount /home/docker/backups/odoo
  when: inventory_hostname in groups.maintenance_nfs
  tags: odoo_prod

- name: PROD add cron job to run backup every day - SFTP case
  cron:
    name: backup odoo
    minute: 58
    hour: 1
    job: /usr/local/bin/docker-compose -f /home/docker/backups/backup-odoo.yaml run --rm backup_odoo
  when: inventory_hostname in groups.maintenance_sftp
  tags: odoo_prod

- name: TEST copy compose file to restore db from prod
  template:
    src: restore-odootest.yaml.j2
    dest: /home/docker/backups/restore-odootest.yaml
    owner: root
    group: root
    mode: 0400
  when: inventory_hostname in groups.maintenance_contract
  tags: odoo_test

