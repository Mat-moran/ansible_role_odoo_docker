---

## Install Odoo docker test
- name: TEST create Odoo docker structure on server in /home/docker/odootest
  file:
    name: "{{ item }}"
    state: directory
    owner: root
    group: root
  with_items:
  - /home/docker/odootest/odoo/custom/build.d
  - /home/docker/odootest/odoo/custom/dependencies
  - /home/docker/odootest/odoo/custom/src/
  tags: odoo_test

- name: TEST create link for src towards custom src
  file:
    name: "/home/docker/odootest/src"
    state: link
    src: "/home/docker/odootest/odoo/custom/src"
  tags: odoo_test

- name: TEST copy test docker compose service
  template:
    src: test.yaml.j2
    dest: /home/docker/odootest/docker-compose.yml
    owner: root
    group: root
    mode: 0400
  tags: odoo_test
  
- name: TEST copy call for Tecnativa docker image 
  copy:
    src: Dockerfile-odoo
    dest: "/home/docker/odootest/odoo/Dockerfile"
    owner: root
    group: root
    mode: 0644 
  tags: odoo_test

- name: TEST set {{ item }}  variables from template
  template:
    src: "{{ item }}.j2"
    dest: "/home/docker/odootest/odoo/custom/src/{{ item }}"
    owner: root
    group: root
    mode: 0644 
  with_items:
    - repos.yaml
    - addons.yaml
  notify: rebuild odoo docker test
  tags: odoo_test

- name: TEST copy pip extra requirements file
  copy:
    src: pip.txt
    dest: "/home/docker/odootest/odoo/custom/dependencies/pip.txt"
    owner: root
    group: root
    mode: 0644
  notify: rebuild odoo docker test
  tags: odoo_test

- name: TEST copy compose file to restore db from prod
  template:
    src: restore-odootest.yaml.j2
    dest: /home/docker/backups/restore-odootest.yaml
    owner: root
    group: root
    mode: 0400
  tags: odoo_test

## Install Odoo prod docker
- name: PROD create Odoo docker structure on server in /home/docker/odoo
  file:
    name: "/home/docker/odoo"
    state: directory
    owner: root
    group: root
  tags: odoo_prod

- name: PROD copy prod docker compose service
  template:
    src: prod.yaml.j2
    dest: /home/docker/odoo/docker-compose.yml
    owner: root
    group: root
    mode: 0400
  tags: odoo_prod

#--------------------------------------------------
# Banking section
#--------------------------------------------------

- name: Clone Weboob GIT repo
  git: repo="https://git.weboob.org/weboob/devel.git" dest="/root/weboob"
  when: banking is defined
  register: weboob
  tags: bank

- name: Install necessary python modules
  pip:  name="{{ item }}"
  with_items:
    - prettytable
    - cssselect
    - html2text
    - unidecode
    - python-dateutil
    - lxml
    - Pillow
  when: banking is defined
  tags: bank

- name: Create Config directory
  file:
    name: /root/.config/weboob
    state: directory
  when: banking is defined
  tags: bank

- name: Copy configuration file
  template: src=backends.j2 dest=/root/.config/weboob/backends mode=0400
  when: banking is defined
  tags: bank

- name: PROD create bank repo
  file:
    name: /home/docker/odoo/bank
    state: directory
    owner: root
    group: root
  when: banking is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank account every day
  cron:
    name: import bank moves
    minute: 30
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank_account }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank_account_import.ofx ; chmod 444 /home/docker/odoo/bank/bank_account_import.ofx
  when: banking is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank account 2 every day
  cron:
    name: import bank moves account 2
    minute: 50
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank_account2 }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank_account2_import.ofx ; chmod 444 /home/docker/odoo/bank/bank_account2_import.ofx
  when: banking is defined and bank_account2 is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank 2 account every day
  cron:
    name: import bank 2 moves
    minute: 25
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank2_account }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank2_account_import.ofx ; chmod 444 /home/docker/odoo/bank/bank2_account_import.ofx
  when: banking is defined and bank2_account is defined
  tags: odoo_prod, bank

- name: PROD add cron job to get bank 2 account 2 every day
  cron:
    name: import bank 2 moves account 2
    minute: 45
    hour: 20
    job: /root/weboob/tools/local_run.sh boobank history {{ bank2_account2 }} `date -d "last week" +\%Y-\%m-\%d` -f ofx | sed -n '/OFXHEADER/,$p' | sed 's/.*OFXHEADER/OFXHEADER/g' > /home/docker/odoo/bank/bank2_account2_import.ofx ; chmod 444 /home/docker/odoo/bank/bank2_account2_import.ofx
  when: banking is defined and bank2_account2 is defined
  tags: odoo_prod, bank

#--------------------------------------------------
# Backup section
#--------------------------------------------------

- name: PROD copy docker compose for backups
  template:
    src: backup.yaml.j2
    dest: "/home/docker/backups/backup-odoo.yaml"
    owner: root
    group: root
    mode: 0400
  tags: odoo_prod

- name: PROD add cron job to run backup every day
  cron:
    name: backup odoo
    minute: 03
    hour: 2
    job: mount /home/docker/backups/odoo && /usr/local/bin/docker-compose -f /home/docker/backups/backup-odoo.yaml run --rm backup_odoo && umount /home/docker/backups/odoo
  tags: odoo_prod

#--------------------------------------------------
# Whitelists section
#--------------------------------------------------

- name: copy docker compose for whitelists
  template:
    src: whitelists.yaml.j2
    dest: "/home/docker/whitelists.yaml"
    owner: root
    group: root
    mode: 0400
  notify: start odoo docker whitelists
  when: inventory_hostname in groups['docker_secure']
  tags: odoo_whitelists
